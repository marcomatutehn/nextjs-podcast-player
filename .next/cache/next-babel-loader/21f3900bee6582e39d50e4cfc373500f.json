{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport PodcastPlayer from '../components/PodcastPlayer';\nimport Error from './_error';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      if (event.metaKey || event.ctrlKey || event.shiftKey || event.nativeEvent && event.nativeEvent.which === 2) {\n        // Si estÃ¡ haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n        return;\n      }\n\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _defineProperty(this, \"closePodcast\", event => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: null\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(PodcastPlayer, {\n      clip: openPodcast,\n      onClose: this.closePodcast\n    }), __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-1404733386\" + \" \" + \"banner\"\n    }), __jsx(\"h1\", {\n      className: \"jsx-1404733386\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-1404733386\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-1404733386\"\n    }, \"Series\"), __jsx(ChannelGrid, {\n      channels: series\n    })), __jsx(\"h2\", {\n      className: \"jsx-1404733386\"\n    }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"1404733386\"\n    }, \".banner.jsx-1404733386{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}h1.jsx-1404733386{font-weight:600;padding:15px;}h2.jsx-1404733386{padding:15px;font-size:1.2em;font-weight:600;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjb21hcnRpbmV6L1dlYnN0b3JtUHJvamVjdHMvbmV4dGpzLXBvZGNhc3QtcGxheWVyL3BhZ2VzL2NoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEZrQixBQUdzQixBQU9LLEFBSUgsV0FWTSxFQVdILEdBSkgsYUFDZixBQUlrQixDQVhZLGVBWW5CLFNBQ1gsSUFad0Isc0JBQ0Esc0JBQ3hCIiwiZmlsZSI6Ii9Vc2Vycy9tYXJjb21hcnRpbmV6L1dlYnN0b3JtUHJvamVjdHMvbmV4dGpzLXBvZGNhc3QtcGxheWVyL3BhZ2VzL2NoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2lzb21vcnBoaWMtZmV0Y2gnXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0J1xuaW1wb3J0IENoYW5uZWxHcmlkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2hhbm5lbEdyaWQnXG5pbXBvcnQgUG9kY2FzdExpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0TGlzdCdcbmltcG9ydCBQb2RjYXN0TGlzdFdpdGhDbGljayBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RMaXN0V2l0aENsaWNrJ1xuaW1wb3J0IFBvZGNhc3RQbGF5ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0UGxheWVyJ1xuaW1wb3J0IEVycm9yIGZyb20gJy4vX2Vycm9yJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcylcbiAgICB0aGlzLnN0YXRlID0geyBvcGVuUG9kY2FzdDogbnVsbCB9XG4gIH1cblxuICBzdGF0aWMgYXN5bmMgZ2V0SW5pdGlhbFByb3BzKHsgcXVlcnksIHJlcyB9KSB7XG4gICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXG5cbiAgICB0cnkge1xuICAgICAgbGV0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2F1ZGlvX2NsaXBzYClcbiAgICAgIF0pXG5cbiAgICAgIGlmKCByZXFDaGFubmVsLnN0YXR1cyA+PSA0MDAgKSB7XG4gICAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXNcbiAgICAgICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1cyB9XG4gICAgICB9XG5cbiAgICAgIGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXG4gICAgICBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbFxuXG4gICAgICBsZXQgZGF0YUF1ZGlvcyA9IGF3YWl0IHJlcUF1ZGlvcy5qc29uKClcbiAgICAgIGxldCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzXG5cbiAgICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxuICAgICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xuXG4gICAgICByZXR1cm4geyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGU6IDIwMCB9XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICByZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IDUwMyB9XG4gICAgfVxuICB9XG5cbiAgb3BlblBvZGNhc3QgPSAoZXZlbnQsIHBvZGNhc3QpID0+IHtcbiAgICBpZiAoIGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSB8fCAoZXZlbnQubmF0aXZlRXZlbnQgJiYgZXZlbnQubmF0aXZlRXZlbnQud2hpY2ggPT09IDIpICkge1xuICAgICAgLy8gU2kgZXN0w6EgaGFjaWVuZG8gQ3RybCtDbGljayBvIENtZCtDbGljaywgZGVqYW1vcyBxdWUgZWwgY2xpY2sgc3VjZWRhIG5vcm1hbG1lbnRlXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBvcGVuUG9kY2FzdDogcG9kY2FzdFxuICAgIH0pXG4gIH1cblxuICBjbG9zZVBvZGNhc3QgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBvcGVuUG9kY2FzdDogbnVsbFxuICAgIH0pXG4gIH1cbiAgXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZSB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHsgb3BlblBvZGNhc3QgfSA9IHRoaXMuc3RhdGVcblxuICAgIGlmKCBzdGF0dXNDb2RlICE9PSAyMDAgKSB7XG4gICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9eyBzdGF0dXNDb2RlIH0gLz5cbiAgICB9XG5cbiAgICByZXR1cm4gPExheW91dCB0aXRsZT17Y2hhbm5lbC50aXRsZX0+XG5cbiAgICAgIHsgb3BlblBvZGNhc3QgJiYgXG4gICAgICAgIDxQb2RjYXN0UGxheWVyIGNsaXA9eyBvcGVuUG9kY2FzdCB9IG9uQ2xvc2U9eyB0aGlzLmNsb3NlUG9kY2FzdCB9IC8+XG4gICAgICB9XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFubmVyXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbH0pYCB9fSAvPlxuICAgICAgXG4gICAgICA8aDE+eyBjaGFubmVsLnRpdGxlIH08L2gxPlxuXG4gICAgICB7IHNlcmllcy5sZW5ndGggPiAwICYmXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGgyPlNlcmllczwvaDI+XG4gICAgICAgICAgPENoYW5uZWxHcmlkIGNoYW5uZWxzPXsgc2VyaWVzIH0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG5cbiAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cbiAgICAgIDxQb2RjYXN0TGlzdFdpdGhDbGljayBwb2RjYXN0cz17IGF1ZGlvQ2xpcHMgfSBvbkNsaWNrUG9kY2FzdD17IHRoaXMub3BlblBvZGNhc3QgfSAvPlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5iYW5uZXIge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyNSU7XG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNhYWE7XG4gICAgICAgIH1cbiAgICAgICAgaDEge1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgfVxuICAgICAgICBoMiB7XG4gICAgICAgICAgcGFkZGluZzogMTVweDtcbiAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xuICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gIH1cbn0iXX0= */\\n/*@ sourceURL=/Users/marcomartinez/WebstormProjects/nextjs-podcast-player/pages/channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/marcomartinez/WebstormProjects/nextjs-podcast-player/pages/channel.js"],"names":["Layout","ChannelGrid","PodcastList","PodcastListWithClick","PodcastPlayer","Error","React","Component","constructor","props","event","podcast","metaKey","ctrlKey","shiftKey","nativeEvent","which","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","all","fetch","status","statusCode","channel","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","closePodcast","backgroundImage","urls","banner_image","original","length"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nimport PodcastList from '../components/PodcastList'\nimport PodcastListWithClick from '../components/PodcastListWithClick'\nimport PodcastPlayer from '../components/PodcastPlayer'\nimport Error from './_error'\n\nexport default class extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { openPodcast: null }\n  }\n\n  static async getInitialProps({ query, res }) {\n    let idChannel = query.id\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ])\n\n      if( reqChannel.status >= 400 ) {\n        res.statusCode = reqChannel.status\n        return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\n      }\n\n      let dataChannel = await reqChannel.json()\n      let channel = dataChannel.body.channel\n\n      let dataAudios = await reqAudios.json()\n      let audioClips = dataAudios.body.audio_clips\n\n      let dataSeries = await reqSeries.json()\n      let series = dataSeries.body.channels\n\n      return { channel, audioClips, series, statusCode: 200 }\n    } catch(e) {\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\n    }\n  }\n\n  openPodcast = (event, podcast) => {\n    if ( event.metaKey || event.ctrlKey || event.shiftKey || (event.nativeEvent && event.nativeEvent.which === 2) ) {\n      // Si estÃ¡ haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n      return\n    }\n\n    event.preventDefault()\n    this.setState({\n      openPodcast: podcast\n    })\n  }\n\n  closePodcast = (event) => {\n    event.preventDefault()\n    this.setState({\n      openPodcast: null\n    })\n  }\n  \n  render() {\n    const { channel, audioClips, series, statusCode } = this.props\n    const { openPodcast } = this.state\n\n    if( statusCode !== 200 ) {\n      return <Error statusCode={ statusCode } />\n    }\n\n    return <Layout title={channel.title}>\n\n      { openPodcast && \n        <PodcastPlayer clip={ openPodcast } onClose={ this.closePodcast } />\n      }\n\n      <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n      \n      <h1>{ channel.title }</h1>\n\n      { series.length > 0 &&\n        <div>\n          <h2>Series</h2>\n          <ChannelGrid channels={ series } />\n        </div>\n      }\n\n      <h2>Ultimos Podcasts</h2>\n      <PodcastListWithClick podcasts={ audioClips } onClickPodcast={ this.openPodcast } />\n\n      <style jsx>{`\n        .banner {\n          width: 100%;\n          padding-bottom: 25%;\n          background-position: 50% 50%;\n          background-size: cover;\n          background-color: #aaa;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        h2 {\n          padding: 15px;\n          font-size: 1.2em;\n          font-weight: 600;\n          margin: 0;\n        }\n      `}</style>\n    </Layout>\n  }\n}"]},"metadata":{},"sourceType":"module"}